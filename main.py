import sqlite3
import telebot
from config import token
from datetime import datetime, timedelta
import time
from threading import Thread

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
bot = telebot.TeleBot(token) #—Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ config.py –≤ –ø–∞–ø–∫–µ —Å –ø—Ä–æ–µ–∫—Ç–æ–º

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def is_user_allowed(chat_id):
    db = sqlite3.connect('stb_bot.db')
    cur = db.cursor()
    cur.execute("SELECT 1 FROM white_list WHERE chat_id = ?", (chat_id,))
    #–ó–∞–ø—Ä–æ—Å –≤—ã—à–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç, —Ö—Ä–∞–Ω–∏—Ç—Å—è –ª–∏ chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ white_list
    result = cur.fetchone()
    db.close()
    return result is not None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è chat_id, –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç, –∫—É–¥–∞ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –±–æ—Ç
#chat_id –±—É–¥–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –Ω—É–∂–Ω—É—é –≥—Ä—É–ø–ø—É
def get_chat_id():
    db = sqlite3.connect('stb_bot.db')
    cur = db.cursor()
    cur.execute("SELECT id_chat FROM chat")
    result = cur.fetchone()
    db.close()
    if result:
        return result[0]
    return None

# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞, –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è is_user_allowed –≤–µ—Ä–Ω—É–ª–∞ True, —Ç–æ —Ä–∞–∑—Ä–µ—à–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
def access_control(func):
    def wrapper(message):
        if message.chat.type == "private" or is_user_allowed(message.chat.id):
            return func(message)
        else:
            bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø –æ—Ç–∫–ª–æ–Ω–µ–Ω! –ü–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã.")
    return wrapper

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ /start –∏ /help
@bot.message_handler(commands=['start', 'help'])
#–Ω–∞ –∫–∞–∂–¥—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞
@access_control
def send_welcome(message):
    helptext = ("üëã–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —ç—Ç–æ —Å–ª—É–∂–µ–±–Ω—ã–π –±–æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö. \n"
                "–î–ª—è –Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /chats\n"
                "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–µ–π: \n"
                "/addmeet - –î–æ–±–∞–≤–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É \n"
                "/cancel - –û—Ç–º–µ–Ω–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É –≤ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å üö´ \n"
                "/delete - –£–¥–∞–ª–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É. \n"
                "/stop - –ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É. ‚úÖ \n"
                "/edittime - –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏ \n"
                "–ü—Ä–æ—á–µ–µ:\n"
                "/list_plane - –°–ø–∏—Å–æ–∫ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á \n"
                "/list - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á \n"
                "/addadmin - –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
                "/deleteadmin - –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \n"
                "/adminlist - –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
    
    bot.send_message(message.chat.id, helptext)

@bot.message_handler(commands=['chats'])
@access_control
def send_guide(message):
    guide_text = ("–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: \n"
    "1. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —á–∞—Ç—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –ë–î, –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /deletechat.  \n"
    "2. –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –Ω—É–∂–Ω—ã–π —á–∞—Ç –∏ —É–∑–Ω–∞—Ç—å chat_id –Ω—É–∂–Ω–æ–π –±–µ—Å–µ–¥—ã. \n"
    "3. –ü—Ä–æ–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /addchat –∏ –≤–ø–∏—Å–∞—Ç—å chat_id, –∫—É–¥–∞ –±–æ—Ç –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω. \n"
    "4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –±–æ—Ç–∞. \n"
    "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±–æ—Ç –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å –æ–¥–Ω–∏–º —á–∞—Ç–æ–º! \n")
    db = sqlite3.connect('stb_bot.db')
    cur  = db.cursor()
    cur.execute("SELECT * FROM chat")
    result  = cur.fetchone()
    bot.send_message(message.chat.id, result)
    bot.send_message(message.chat.id, guide_text)
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –≤—Å—Ç—Ä–µ—á–∞—Ö
@bot.message_handler(commands=['remember'])
#–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —á–∞—Ç–µ –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
def send_remember(message): #—Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    if datetime.now().weekday() >= 5:  # –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è —Å—É–±–±–æ—Ç–∞ –∏–ª–∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
        bot.send_message(message.chat.id, "–°–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è.")
        return
    
    db = sqlite3.connect('stb_bot.db')
    cur = db.cursor()
    cur.execute("SELECT naming, time FROM PlaneMeets WHERE status = 1") #–ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–∫–ª—é—á–µ–Ω–æ –ª–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ 0, —Ç–æ –µ–≥–æ..
    #..–æ—Ç–∫–ª—é—á–∏–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    meets = cur.fetchall()
    db.close()
    
    for meet in meets:
        naming, time = meet
        planemeet_pre = f"–ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –≤—Å—Ç—Ä–µ—á–µ {naming}, –æ–Ω–∞ –ø—Ä–æ–π–¥–µ—Ç –≤ {time}"
        bot.send_message(message.chat.id, planemeet_pre)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@bot.message_handler(commands=['addadmin'])
@access_control
def add_admin(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
    bot.register_next_step_handler(msg, save_admin_id)

def save_admin_id(message):
    admin_id = message.text
    db = sqlite3.connect('stb_bot.db')
    cur = db.cursor()
    cur.execute("INSERT INTO white_list (chat_id) VALUES (?)", (admin_id,))
    db.commit()
    db.close()
    bot.send_message(message.chat.id, f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å ID {admin_id} –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@bot.message_handler(commands=['deleteadmin'])
@access_control
def delete_admin(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:")
    bot.register_next_step_handler(msg, remove_admin_id)

def remove_admin_id(message):
    admin_id = message.text
    db = sqlite3.connect('stb_bot.db')
    cur = db.cursor()
    cur.execute("DELETE FROM white_list WHERE chat_id = ?", (admin_id,))
    db.commit()
    db.close()
    bot.send_message(message.chat.id, f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å ID {admin_id} –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")


# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π –∑–∞ 30 –∏ 15 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
def send_prepared_info():
    chat_id = get_chat_id()
    if chat_id is None:
        print("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å chat_id.")
        return
    
    while True:
        current_time = datetime.now()
        
        if current_time.weekday() >= 5:  # –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è —Å—É–±–±–æ—Ç–∞ –∏–ª–∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
            time.sleep(3600)  # –°–ø–∏–º 1 —á–∞—Å –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
            continue
        
        db = sqlite3.connect('stb_bot.db')
        cur = db.cursor()
        cur.execute("SELECT id, naming, time FROM PlaneMeets WHERE status = 1")
        meets = cur.fetchall()
        db.close()

        for meet in meets:
            meet_id, naming, time_str = meet
            if is_meeting_canceled_today(meet_id):
                continue
            meet_time = datetime.strptime(time_str, "%H:%M").time()
            meet_datetime = datetime.combine(current_time.date(), meet_time)
            
            if current_time > meet_datetime:
                continue
            
            time_diffs = [
                ("30 –º–∏–Ω—É—Ç", meet_datetime - timedelta(minutes=30)),
                ("15 –º–∏–Ω—É—Ç", meet_datetime - timedelta(minutes=15)),
            ]
            
            for diff_text, reminder_time in time_diffs:
                if current_time >= reminder_time and current_time < (reminder_time + timedelta(minutes=1)):
                    planemeet_pre = f"–ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –≤—Å—Ç—Ä–µ—á–µ {naming}, –æ–Ω–∞ –ø—Ä–æ–π–¥–µ—Ç –≤ {time_str} ({diff_text} –¥–æ –Ω–∞—á–∞–ª–∞)"
                    bot.send_message(chat_id, planemeet_pre)
                    time.sleep(60)  # –ñ–¥–µ–º 60 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π

        time.sleep(1)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π –≤ –º–æ–º–µ–Ω—Ç –Ω–∞—á–∞–ª–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
def send_start_notification():
    chat_id = get_chat_id()
    if chat_id is None:
        print("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å chat_id.")
        return
    
    while True:
        current_time = datetime.now()
        
        if current_time.weekday() >= 5:  # –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è —Å—É–±–±–æ—Ç–∞ –∏–ª–∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
            time.sleep(3600)  # –°–ø–∏–º 1 —á–∞—Å –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
            continue
        
        db = sqlite3.connect('stb_bot.db')
        cur = db.cursor()
        cur.execute("SELECT id, naming, time FROM PlaneMeets WHERE status = 1")
        meets = cur.fetchall()
        db.close()

        for meet in meets:
            meet_id, naming, time_str = meet
            if is_meeting_canceled_today(meet_id):
                continue
            meet_time = datetime.strptime(time_str, "%H:%M").time()
            meet_datetime = datetime.combine(current_time.date(), meet_time)
            
            if current_time >= meet_datetime and current_time < (meet_datetime + timedelta(minutes=1)):
                planemeet_pre = f"–ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –≤—Å—Ç—Ä–µ—á–µ {naming}, –æ–Ω–∞ –Ω–∞—á–∞–ª–∞—Å—å –≤ {time_str}."
                bot.send_message(chat_id, planemeet_pre)
                time.sleep(60)  # –ñ–¥–µ–º 60 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π

        time.sleep(1)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞
@bot.message_handler(commands=['addchat'])
@access_control
def add_chat(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ id —á–∞—Ç–∞ (—É–∑–Ω–∞—Ç—å –º–æ–∂–Ω–æ —Ç—É—Ç: @LeadConverterToolkitBot):")
    bot.register_next_step_handler(msg, save_chat_id)

def save_chat_id(message):
    chat_id = message.text
    db = sqlite3.connect('stb_bot.db')
    cur = db.cursor()
    cur.execute("INSERT INTO chat (id_chat) VALUES (?)", (chat_id,))
    db.commit()
    db.close()
    send_result(message)

def send_result(message):
    bot.send_message(message.chat.id, "–ë–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —á–∞—Ç–µ. \n"
                                      "–¢–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –µ–≥–æ –≤ –Ω—É–∂–Ω—ã–π —á–∞—Ç.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞
@bot.message_handler(commands=['deletechat'])
@access_control
def delete_chat(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ id —á–∞—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:")
    bot.register_next_step_handler(msg, remove_chat_id)

def remove_chat_id(message):
    chat_id = message.text
    db = sqlite3.connect('stb_bot.db')
    cur = db.cursor()
    cur.execute("DELETE FROM chat WHERE id_chat = ?", (chat_id,))
    db.commit()
    db.close()
    bot.send_message(message.chat.id, f"–ß–∞—Ç —Å id {chat_id} –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –≤—Å—Ç—Ä–µ—á–∏
@bot.message_handler(commands=['addmeet'])
@access_control
def add_meet(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏:")
    bot.register_next_step_handler(msg, get_meet_name)

def get_meet_name(message):
    meet_name = message.text
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏ (—Ñ–æ—Ä–º–∞—Ç –ß–ß:–ú–ú):")
    bot.register_next_step_handler(msg, get_meet_time, meet_name)

def get_meet_time(message, meet_name):
    meet_time = message.text
    insert_meet(meet_name, meet_time)
    bot.send_message(message.chat.id, "–í—Å—Ç—Ä–µ—á–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞! –Ø –Ω–∞–ø–æ–º–Ω—é –æ –Ω–µ–π –∑–∞ 30 –∏ –∑–∞ 15 –º–∏–Ω—É—Ç –¥–æ –µ–µ –Ω–∞—á–∞–ª–∞. \n"
                                      "–≠—Ç–æ –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∏ –≤—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç, –ø—Ä–æ–ø–∏—Å–∞–≤ –∫–æ–º–∞–Ω–¥—É /remember")

# –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É PlaneMeets
def insert_meet(naming, time_):
    db = sqlite3.connect('stb_bot.db')
    cur = db.cursor()
    
    cur.execute("INSERT INTO PlaneMeets (naming, time, status) VALUES (?, ?, 1)", (naming, time_))
    
    db.commit()
    db.close()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å
@bot.message_handler(commands=['cancel'])
@access_control
def cancel_meet(message):
    try:
        msg = bot.send_message(message.chat.id, "ID –≤—Å—Ç—Ä–µ—á–∏ –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å, –ø—Ä–æ–ø–∏—Å–∞–≤ –∫–æ–º–∞–Ω–¥—É /list_plane")
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –≤—Å—Ç—Ä–µ—á–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:")
        bot.register_next_step_handler(msg, get_meet_id_for_cancel_today)
    except Exception as ex:
        bot.send_message(message.chat.id, "–û—Ç–º–µ–Ω–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞, –Ω–æ –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ!")

def get_meet_id_for_cancel_today(message):
    try:
        meet_id = int(message.text)
        cancel_meeting_today(meet_id)
        bot.send_message(message.chat.id, f"–í—Å—Ç—Ä–µ—á–∞ —Å ID {meet_id} –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!")
    except Exception as ex:
        bot.send_message(message.chat.id, "–û—Ç–º–µ–Ω–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞, –Ω–æ –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ!")

def cancel_meeting_today(meet_id):
    db = sqlite3.connect('stb_bot.db')
    cur = db.cursor()
    
    today_date = datetime.now().date().strftime("%Y-%m-%d")
    cur.execute("INSERT INTO CanceledMeetings (meet_id, cancel_date) VALUES (?, ?)", (meet_id, today_date))
    
    db.commit()
    db.close()

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ—Ç–º–µ–Ω–µ–Ω–∞ –ª–∏ –≤—Å—Ç—Ä–µ—á–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å
def is_meeting_canceled_today(meet_id):
    db = sqlite3.connect('stb_bot.db')
    cur = db.cursor()
    
    today_date = datetime.now().date().strftime("%Y-%m-%d")
    cur.execute("SELECT 1 FROM CanceledMeetings WHERE meet_id = ? AND cancel_date = ?", (meet_id, today_date))
    result = cur.fetchone()
    
    db.close()
    return result is not None

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤—Å—Ç—Ä–µ—á–∏
@bot.message_handler(commands=['edittime'])
@access_control
def edit_meet_time(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –≤—Å—Ç—Ä–µ—á–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:")
    bot.register_next_step_handler(msg, get_meet_id_for_edit)

def get_meet_id_for_edit(message):
    try:
        meet_id = int(message.text)
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏ (—Ñ–æ—Ä–º–∞—Ç –ß–ß:–ú–ú):")
        bot.register_next_step_handler(msg, update_meet_time, meet_id)
    except Exception as ex:
        bot.send_message(message.chat.id, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–µ—Ä–≤–∞–Ω–æ, –Ω–æ –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ!")

def update_meet_time(message, meet_id):
    new_time = message.text
    db = sqlite3.connect('stb_bot.db')
    cur = db.cursor()
    
    cur.execute("UPDATE PlaneMeets SET time = ? WHERE id = ?", (new_time, meet_id))
    
    db.commit()
    db.close()
    bot.send_message(message.chat.id, f"–í—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏ —Å ID {meet_id} –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {new_time}!")

@bot.message_handler(commands=['list_plane'])
@access_control
def list_plane(message):
    db = sqlite3.connect('stb_bot.db')
    cur = db.cursor()
    cur.execute("SELECT * FROM PlaneMeets")
    list_meets  = cur.fetchall()
    bot.send_message(message.chat.id, f"–í—Å–µ –≤—Å—Ç—Ä–µ—á–∏:\n{list_meets}")
    db.close()

# –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ send_prepared_info –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
thread1 = Thread(target=send_prepared_info)
thread1.start()

# –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ send_start_notification –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
thread2 = Thread(target=send_start_notification)
thread2.start()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
try:
    bot.polling()
except Exception as ex:
    print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:", ex)
